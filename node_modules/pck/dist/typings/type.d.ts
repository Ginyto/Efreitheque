import { Schema } from "./schema";
export declare enum TypeId {
    Bool = 0,
    Int = 1,
    Uint = 2,
    Float = 3,
    VarInt = 4,
    VarUint = 5,
    Bytes = 6,
    UTF8 = 7,
    ASCII = 8,
    Ref = 9,
    Array = 10,
    Map = 11,
    OneOf = 12,
}
export declare const enum TypeFlags {
    DynamicSize = 1,
}
export declare class Type<T = null> {
    readonly id: TypeId;
    readonly size: number;
    readonly flags: TypeFlags;
    readonly props: T;
    constructor(id: TypeId, size: number, flags: TypeFlags, props: T);
    toString(): string;
    hasDynamicSize(): boolean;
    isBoolean(): boolean;
    isFloat(): boolean;
    isFixedInteger(): boolean;
    isVariadicInteger(): boolean;
    isInteger(): boolean;
    isNumber(): boolean;
    isSignedInteger(): boolean;
    isUnsignedInteger(): boolean;
    isUtf8String(): boolean;
    isAsciiString(): boolean;
    isString(): boolean;
    isByteArray(): boolean;
    isArray(): this is Type<ArrayTypeProps>;
    isRef(): this is Type<Schema>;
    isOneOf(): this is Type<Type[]>;
}
export interface ArrayTypeProps {
    readonly length: number;
    readonly type: Type<any>;
}
export interface MapTypeProps {
    readonly key: Type<any>;
    readonly value: Type<any>;
}
export declare function REF(schema: Schema): Type<Schema>;
export declare function ARRAY(type: Type<any>, length?: number): Type<ArrayTypeProps>;
export declare function MAP(key: Type<any>, value: Type<any>): Type<MapTypeProps>;
export declare function ONE_OF(types: Type<any>[]): Type<Type<any>[]>;
export declare const BOOL: Type<null>;
export declare const I8: Type<null>;
export declare const U8: Type<null>;
export declare const I16: Type<null>;
export declare const U16: Type<null>;
export declare const I32: Type<null>;
export declare const U32: Type<null>;
export declare const F32: Type<null>;
export declare const F64: Type<null>;
export declare const IVAR: Type<null>;
export declare const UVAR: Type<null>;
export declare const UTF8: Type<null>;
export declare function BYTES(size?: number): Type;
export declare function ASCII(size?: number): Type;
